AWSTemplateFormatVersion: "2010-09-09"
Description: "cloudwatch alarm create"

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "EC2 Resources"
        Parameters:
          - EC2InstanceId
      - Label:
          default: "RDS Resources"
        Parameters:
          - DBInstanceID
      - Label:
          default: "S3 Resources"
        Parameters:
          - s3BucketName
          
      - Label:
          default: "IotCore Resources"
        Parameters:
          - iotCoreRuleName

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------# 
Parameters:
  EC2InstanceId:
    Type: "AWS::EC2::Instance::Id"

  DBInstanceID:
    Type: "String"
    Description : "input Rds InstansId"
    
  s3BucketName:
    Type: String
    Default: "eg-iot-budonoki"
    Description : "input s3 bucketName"
    
  iotCoreRuleName:
    Type: "String"
    Description : "input IotCore Rule Name"
Resources:
# ------------------------------------------------------------#
# CloudWatchAlarm for EC2
# ------------------------------------------------------------#
  CloudWatchAlarmEC2:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: !Sub "alarm-ec2-${EC2InstanceId}-isStatusCheckFailed"
          AlarmDescription: "EC2インスタンスのステータスを監視"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "StatusCheckFailed_System"
          Namespace: "AWS/EC2"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "InstanceId"
              Value: !Ref EC2InstanceId
          Period: 300
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"

# ------------------------------------------------------------#
# CloudWatchAlarm for Lambda
# ------------------------------------------------------------#
  CloudWatchAlarmLambda1:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-latest_order-isErrors"
          AlarmDescription: "公開DB作成処理のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "latest_order"
            - 
              Name: "Resource"
              Value: "latest_order"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"

  CloudWatchAlarmLambda2:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-dataMaintenance-isErrors"
          AlarmDescription: "データメンテナンス機能のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "dataMaintenance"
            - 
              Name: "Resource"
              Value: "dataMaintenance"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"

  CloudWatchAlarmLambda3:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-recovery-isErrors"
          AlarmDescription: "リカバリ機能のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "recovery"
            - 
              Name: "Resource"
              Value: "recovery"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"
          
  CloudWatchAlarmLambda4:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-limitJudge-isErrors"
          AlarmDescription: "閾値判定機能のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "limitJudge"
            - 
              Name: "Resource"
              Value: "limitJudge"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"
          
  CloudWatchAlarmLambda5:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-mailsender-isErrors"
          AlarmDescription: "メール通知機能のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "mailsender"
            - 
              Name: "Resource"
              Value: "mailsender"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"
          
  CloudWatchAlarmLambda6:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-mastermainte_datacollection_delete-isErrors"
          AlarmDescription: "マスタメンテナンス_データ定義マスタ_削除機能のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "mastermainte_datacollection_delete"
            - 
              Name: "Resource"
              Value: "mastermainte_datacollection_delete"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"
          
  CloudWatchAlarmLambda7:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-mastermainte_datacollection_get-isErrors"
          AlarmDescription: "マスタメンテナンス_データ定義マスタ_参照機能のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "mastermainte_datacollection_get"
            - 
              Name: "Resource"
              Value: "mastermainte_datacollection_get"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"
          
  CloudWatchAlarmLambda8:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-mastermainte_datacollection_upsert-isErrors"
          AlarmDescription: "マスタメンテナンス_データ定義マスタ_更新機能のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "mastermainte_datacollection_upsert"
            - 
              Name: "Resource"
              Value: "mastermainte_datacollection_upsert"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"
          
  CloudWatchAlarmLambda9:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-mastermainte_mailsend_delete-isErrors"
          AlarmDescription: "マスタメンテナンス_メール通知マスタ_削除機能のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "mastermainte_mailsend_delete"
            - 
              Name: "Resource"
              Value: "mastermainte_mailsend_delete"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"
          
  CloudWatchAlarmLambda10:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-mastermainte_mailsend_get-isErrors"
          AlarmDescription: "マスタメンテナンス_メール通知マスタ_参照機能のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "mastermainte_mailsend_get"
            - 
              Name: "Resource"
              Value: "mastermainte_mailsend_get"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"
          
  CloudWatchAlarmLambda11:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-lambda-mastermainte_mailsend_upsert-isErrors"
          AlarmDescription: "マスタメンテナンス_メール通知マスタ_更新機能のエラー通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Errors"
          Namespace: "AWS/Lambda"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "FunctionName"
              Value: "mastermainte_mailsend_upsert"
            - 
              Name: "Resource"
              Value: "mastermainte_mailsend_upsert"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"
          
# ------------------------------------------------------------#
# CloudWatchAlarm for IotCore
# ------------------------------------------------------------#
  CloudWatchAlarmIot1:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-iot-common-isPublishIn.AuthError"
          AlarmDescription: "Iotポリシー定義外のtopicに対してpublishされた数をカウント"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "PublishIn.AuthError"
          Namespace: "AWS/IoT"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "Protocol"
              Value: "MQTT"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "notBreaching"

  CloudWatchAlarmIot2:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: "alarm-iot-common-isPublishInSuccess"
          AlarmDescription: "毎日DGWより正常にデータがpublishされていること"
          ActionsEnabled: true
#          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "PublishIn.Success"
          Namespace: "AWS/IoT"
          Statistic: "Sum"
          Dimensions: 
            - 
              Name: "Protocol"
              Value: "MQTT"
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 0
          ComparisonOperator: "LessThanOrEqualToThreshold"
          TreatMissingData: "breaching"

  # ★顧客毎に必要
  CloudWatchAlarmIot3:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: !Sub "alarm-iot-${iotCoreRuleName}-isRuleFailure"
          AlarmDescription: "Iotルールでエラーが発生した場合の通知"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "Failure"
          Namespace: "AWS/IoT"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "RuleName"
              Value: !Ref iotCoreRuleName
          Period: 60
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1
          ComparisonOperator: "GreaterThanOrEqualToThreshold"
          TreatMissingData: "missing"
          
# ------------------------------------------------------------#
# CloudWatchAlarm for RDS
# ------------------------------------------------------------#
  # ★顧客毎に必要
  CloudWatchAlarmRDS:
      Type: "AWS::CloudWatch::Alarm"
      Properties:
          AlarmName: !Sub "alarm-rds-${DBInstanceID}-isFreeStorageSpace"
          AlarmDescription: "RDSのストレージ要領が逼迫している際の通知(1GB未満)"
          ActionsEnabled: true
          AlarmActions: [ !ImportValue SNSTopicARN ]
          MetricName: "FreeStorageSpace"
          Namespace: "AWS/RDS"
          Statistic: "Average"
          Dimensions: 
            - 
              Name: "DBInstanceIdentifier"
              Value: !Ref DBInstanceID
          Period: 300
          EvaluationPeriods: 1
          DatapointsToAlarm: 1
          Threshold: 1073741824
          ComparisonOperator: "LessThanThreshold"
          TreatMissingData: "missing"
# ------------------------------------------------------------#
# LogGroup and LogMetrics create
# ------------------------------------------------------------#
  CloudWatchLogsLogGroup1:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/latest_order"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter1:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup1
          MetricTransformations: 
            - 
              MetricName: "lambda-latest_order-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"

  CloudWatchLogsLogGroup2:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/dataMaintenance"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter2:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup2
          MetricTransformations: 
            - 
              MetricName: "lambda-dataMaintenance-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"

  CloudWatchLogsLogGroup3:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/recovery"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter3:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup3
          MetricTransformations: 
            - 
              MetricName: "lambda-recovery-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"
              
  CloudWatchLogsLogGroup4:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/limitJudge"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter4:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup4
          MetricTransformations: 
            - 
              MetricName: "lambda-limitJudge-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"
                            
  CloudWatchLogsLogGroup5:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/mailsender"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter5:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup5
          MetricTransformations: 
            - 
              MetricName: "lambda-mailsender-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"
              
  CloudWatchLogsLogGroup6:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/mastermainte_datacollection_delete"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter6:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup6
          MetricTransformations: 
            - 
              MetricName: "lambda-mastermainte_datacollection_delete-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"
              
  CloudWatchLogsLogGroup7:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/mastermainte_datacollection_get"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter7:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup7
          MetricTransformations: 
            - 
              MetricName: "lambda-mastermainte_datacollection_get-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"
              
  CloudWatchLogsLogGroup8:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/mastermainte_datacollection_upsert"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter8:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup8
          MetricTransformations: 
            - 
              MetricName: "lambda-mastermainte_datacollection_upsert-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"
              
  CloudWatchLogsLogGroup9:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/mastermainte_mailsend_delete"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter9:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup9
          MetricTransformations: 
            - 
              MetricName: "lambda-mastermainte_mailsend_delete-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"
              
  CloudWatchLogsLogGroup10:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/mastermainte_mailsend_get"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter10:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup10
          MetricTransformations: 
            - 
              MetricName: "lambda-mastermainte_mailsend_get-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"
              
  CloudWatchLogsLogGroup11:
      Type: "AWS::Logs::LogGroup"
      Properties:
          LogGroupName : "/aws/lambda/mastermainte_mailsend_upsert"
          RetentionInDays : 14
  CloudWatchLogsMetricFilter11:
      Type: "AWS::Logs::MetricFilter"
      Properties:
          FilterPattern: "ERROR"
          LogGroupName: !Ref CloudWatchLogsLogGroup11
          MetricTransformations: 
            - 
              MetricName: "lambda-mastermainte_mailsend_upsert-errlog"
              MetricNamespace: "lambdaLog"
              MetricValue: "1"
# ------------------------------------------------------------#
# cron create
# ------------------------------------------------------------#
  EventsRule:
      Type: "AWS::Events::Rule"
      Properties:
          Name: !Sub "${s3BucketName}-dataMaintenance"
          Description: "データメンテナンス"
          ScheduleExpression: "cron(0 15 * * ? *)"
          State: "ENABLED"
          Targets: 
            - 
              Arn: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:dataMaintenance:PRD"
              Id: !Sub "${s3BucketName}-id"
              Input: !Sub "{   \"clientName\": \"${s3BucketName}\" }"
          EventBusName: "default"
