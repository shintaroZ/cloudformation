AWSTemplateFormatVersion: "2010-09-09"
Description: "Lambda create."
# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------# 
Parameters:
  securityGroupId:
    Type: 'AWS::EC2::SecurityGroup::Id'
    Description : "select securityGroupId for rds-sg"
  subnetIda:
    Type: 'AWS::EC2::Subnet::Id'
    Description : "select private-lambda-subnet-a"
  subnetIdc:
    Type: 'AWS::EC2::Subnet::Id'
    Description : "select private-lambda-subnet-c"
  S3BucketName:
    Type: String
    Description : "input code in s3 bucket"
Resources:
# ------------------------------------------------------------#
# 公開DB作成機能
# ------------------------------------------------------------# 
  LatestOrderFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "公開DB作成機能"
      FunctionName: "latest_order"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "latest_order.zip"
      Timeout: 180
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Sub "${securityGroupId}"
      Layers:
        - !Ref LambdaLayer
  LatestOrderVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref LatestOrderFunction

  LatestOrderAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref LatestOrderFunction
          FunctionVersion: "$LATEST"
          Name: "PRD"
# ------------------------------------------------------------#
# データメンテナンス機能
# ------------------------------------------------------------# 
  DataMaintenanceFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "データメンテナンス機能"
      FunctionName: "dataMaintenance"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "dataMaintenance.zip"
      Timeout: 180
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Sub "${securityGroupId}"
      Layers:
        - !Ref LambdaLayer
  DataMaintenanceVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref DataMaintenanceFunction

  DataMaintenanceAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref DataMaintenanceFunction
          FunctionVersion: "$LATEST"
          Name: "PRD"
# ------------------------------------------------------------#
# リカバリー機能
# ------------------------------------------------------------#
  RecoveryFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "リカバリー機能"
      FunctionName: "recovery"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "recovery.zip"
      Timeout: 900
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Sub "${securityGroupId}"
      Layers:
        - !Ref LambdaLayer
  RecoveryVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref RecoveryFunction

  RecoveryAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref RecoveryFunction
          FunctionVersion: "$LATEST"
          Name: "PRD"
# ------------------------------------------------------------#
# マスタメンテナンス機能_データ定義マスタ_削除
# ------------------------------------------------------------#
  MasterMainteDataCollectionDeleteFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_データ定義マスタ_削除"
      FunctionName: "mastermainte_datacollection_delete"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "mastermainte_datacollection_delete.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Sub "${securityGroupId}"
      Layers:
        - !Ref LambdaLayer
  MasterMainteDataCollectionDeleteVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteDataCollectionDeleteFunction

  MasterMainteDataCollectionDeleteAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteDataCollectionDeleteFunction
          FunctionVersion: "$LATEST"
          Name: "PRD"
          
# ------------------------------------------------------------#
# マスタメンテナンス機能_データ定義マスタ_更新
# ------------------------------------------------------------#
  MasterMainteDataCollectionUpsertFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_データ定義マスタ_更新"
      FunctionName: "mastermainte_datacollection_upsert"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "mastermainte_datacollection_upsert.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Sub "${securityGroupId}"
      Layers:
        - !Ref LambdaLayer
  MasterMainteDataCollectionUpsertVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteDataCollectionUpsertFunction

  MasterMainteDataCollectionUpsertAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteDataCollectionUpsertFunction
          FunctionVersion: "$LATEST"
          Name: "PRD"
          
# ------------------------------------------------------------#
# マスタメンテナンス機能_データ定義マスタ_参照
# ------------------------------------------------------------#
  MasterMainteDataCollectionGetFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_データ定義マスタ_参照"
      FunctionName: "mastermainte_datacollection_get"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "mastermainte_datacollection_get.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Sub "${securityGroupId}"
      Layers:
        - !Ref LambdaLayer
  MasterMainteDataCollectionGetVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteDataCollectionGetFunction

  MasterMainteDataCollectionGetAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteDataCollectionGetFunction
          FunctionVersion: "$LATEST"
          Name: "PRD"
# ------------------------------------------------------------#
# マスタメンテナンス機能_メール通知マスタ_削除
# ------------------------------------------------------------#
  MasterMainteMailSendDeleteFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_メール通知マスタ_削除"
      FunctionName: "mastermainte_mailsend_delete"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "mastermainte_mailsend_delete.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Sub "${securityGroupId}"
      Layers:
        - !Ref LambdaLayer
  MasterMainteMailSendDeleteVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteMailSendDeleteFunction

  MasterMainteMailSendDeleteAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteMailSendDeleteFunction
          FunctionVersion: "$LATEST"
          Name: "PRD"
          
# ------------------------------------------------------------#
# マスタメンテナンス機能_メール通知マスタ_更新
# ------------------------------------------------------------#
  MasterMainteMailSendUpsertFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_メール通知マスタ_更新"
      FunctionName: "mastermainte_mailsend_upsert"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "mastermainte_mailsend_upsert.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Sub "${securityGroupId}"
      Layers:
        - !Ref LambdaLayer
  MasterMainteMailSendUpsertVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteMailSendUpsertFunction

  MasterMainteMailSendUpsertAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteMailSendUpsertFunction
          FunctionVersion: "$LATEST"
          Name: "PRD"
          
# ------------------------------------------------------------#
# マスタメンテナンス機能_メール通知マスタ_参照
# ------------------------------------------------------------#
  MasterMainteMailSendGetFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_メール通知マスタ_参照"
      FunctionName: "mastermainte_mailsend_get"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "mastermainte_mailsend_get.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Sub "${securityGroupId}"
      Layers:
        - !Ref LambdaLayer
  MasterMainteMailSendGetVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteMailSendGetFunction

  MasterMainteMailSendGetAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteMailSendGetFunction
          FunctionVersion: "$LATEST"
          Name: "PRD"
# ------------------------------------------------------------#
# レイヤー
# ------------------------------------------------------------#
  LambdaLayer:
      Type: "AWS::Lambda::LayerVersion"
      Properties:
          Description: "製品化ver1.0"
          CompatibleRuntimes: 
            - "python3.6"
            - "python3.7"
            - "python3.8"
          LayerName: "initRdsCommon"
          Content: 
              S3Bucket: !Sub "${S3BucketName}"
              S3Key: "python.zip"

# ------------------------------------------------------------#
# lambdaRole create
# ------------------------------------------------------------# 
  IAMRoleForLambda:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonRDSFullAccess'
        - 'arn:aws:iam::aws:policy/AWSLambda_FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonAthenaFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSESFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonVPCFullAccess'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'
      MaxSessionDuration: 3600
      Path: "/"
      RoleName: "lambdaRole"
