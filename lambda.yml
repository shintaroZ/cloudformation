AWSTemplateFormatVersion: "2010-09-09"
Description: "Lambda create."

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "VPC Configuration"
        Parameters:
          - vpcId
          - subnetIda
          - subnetIdc
      - Label:
          default: "S3 Configuration"
        Parameters:
          - S3BucketName
# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------# 
Parameters:
  vpcId:
    Type: 'AWS::EC2::VPC::Id'
  subnetIda:
    Type: 'AWS::EC2::Subnet::Id'
    Description : "select private-lambda-subnet-a"
  subnetIdc:
    Type: 'AWS::EC2::Subnet::Id'
    Description : "select private-lambda-subnet-c"
  S3BucketName:
    Type: String
    Description : "input code in s3 bucket"
Resources:
# ------------------------------------------------------------#
# 公開DB作成機能
# ------------------------------------------------------------# 
  LatestOrderFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "公開DB作成機能"
      FunctionName: "latest_order"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/latest_order.zip"
      Timeout: 180
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  LatestOrderVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref LatestOrderFunction

  LatestOrderAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref LatestOrderFunction
          FunctionVersion: !GetAtt  LatestOrderVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# データメンテナンス機能
# ------------------------------------------------------------# 
  DataMaintenanceFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "データメンテナンス機能"
      FunctionName: "dataMaintenance"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/dataMaintenance.zip"
      Timeout: 180
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  DataMaintenanceVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref DataMaintenanceFunction
          
  DataMaintenanceAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref DataMaintenanceFunction
          FunctionVersion: !GetAtt  DataMaintenanceVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# リカバリー機能
# ------------------------------------------------------------#
  RecoveryFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "リカバリー機能"
      FunctionName: "recovery"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/recovery.zip"
      Timeout: 900
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  RecoveryVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref RecoveryFunction
  RecoveryAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref RecoveryFunction
          FunctionVersion: !GetAtt  RecoveryVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# マスタメンテナンス機能_データ定義マスタ_削除
# ------------------------------------------------------------#
  MasterMainteDataCollectionDeleteFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_データ定義マスタ_削除機能"
      FunctionName: "mastermainte_datacollection_delete"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mastermainte_datacollection_delete.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MasterMainteDataCollectionDeleteVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteDataCollectionDeleteFunction
  MasterMainteDataCollectionDeleteAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteDataCollectionDeleteFunction
          FunctionVersion: !GetAtt  MasterMainteDataCollectionDeleteVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# マスタメンテナンス機能_データ定義マスタ_更新
# ------------------------------------------------------------#
  MasterMainteDataCollectionUpsertFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_データ定義マスタ_更新機能"
      FunctionName: "mastermainte_datacollection_upsert"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mastermainte_datacollection_upsert.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MasterMainteDataCollectionUpsertVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteDataCollectionUpsertFunction
  MasterMainteDataCollectionUpsertAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteDataCollectionUpsertFunction
          FunctionVersion: !GetAtt  MasterMainteDataCollectionUpsertVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# マスタメンテナンス機能_データ定義マスタ_参照
# ------------------------------------------------------------#
  MasterMainteDataCollectionGetFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_データ定義マスタ_参照機能"
      FunctionName: "mastermainte_datacollection_get"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mastermainte_datacollection_get.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MasterMainteDataCollectionGetVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteDataCollectionGetFunction
  MasterMainteDataCollectionGetAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteDataCollectionGetFunction
          FunctionVersion: !GetAtt  MasterMainteDataCollectionGetVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# マスタメンテナンス機能_メール通知マスタ_削除
# ------------------------------------------------------------#
  MasterMainteMailSendDeleteFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_メール通知マスタ_削除機能"
      FunctionName: "mastermainte_mailsend_delete"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mastermainte_mailsend_delete.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MasterMainteMailSendDeleteVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteMailSendDeleteFunction
  MasterMainteMailSendDeleteAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteMailSendDeleteFunction
          FunctionVersion: !GetAtt  MasterMainteMailSendDeleteVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# マスタメンテナンス機能_メール通知マスタ_更新
# ------------------------------------------------------------#
  MasterMainteMailSendUpsertFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_メール通知マスタ_更新機能"
      FunctionName: "mastermainte_mailsend_upsert"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mastermainte_mailsend_upsert.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MasterMainteMailSendUpsertVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteMailSendUpsertFunction
  MasterMainteMailSendUpsertAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteMailSendUpsertFunction
          FunctionVersion: !GetAtt  MasterMainteMailSendUpsertVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# マスタメンテナンス機能_メール通知マスタ_参照
# ------------------------------------------------------------#
  MasterMainteMailSendGetFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "マスタメンテナンス機能_メール通知マスタ_参照機能"
      FunctionName: "mastermainte_mailsend_get"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mastermainte_mailsend_get.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MasterMainteMailSendGetVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MasterMainteMailSendGetFunction
  MasterMainteMailSendGetAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MasterMainteMailSendGetFunction
          FunctionVersion: !GetAtt  MasterMainteMailSendGetVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# 閾値判定機能
# ------------------------------------------------------------#
  LimitJudgeFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "閾値判定機能"
      FunctionName: "limitJudge"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/limitJudge.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  LimitJudgeVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref LimitJudgeFunction
  LimitJudgeAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref LimitJudgeFunction
          FunctionVersion: !GetAtt  LimitJudgeVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# メール通知機能
# ------------------------------------------------------------#
  MailsenderFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "メール通知機能"
      FunctionName: "mailsender"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mailsender.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MailsenderVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MailsenderFunction
  MailsenderAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MailsenderFunction
          FunctionVersion: !GetAtt  MailsenderVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# MQ受信機能
# ------------------------------------------------------------#
  AmqpconsumerFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "MQ受信機能"
      FunctionName: "amqpconsumer"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/amqpconsumer.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  AmqpconsumerVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref AmqpconsumerFunction
  AmqpconsumerAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref AmqpconsumerFunction
          FunctionVersion: !GetAtt  AmqpconsumerVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# MQ送信機能
# ------------------------------------------------------------#
  AmqpproducerFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "MQ送信機能"
      FunctionName: "amqpproducer"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/amqpproducer.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  AmqpproducerVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref AmqpproducerFunction
  AmqpproducerAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref AmqpproducerFunction
          FunctionVersion: !GetAtt  AmqpproducerVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# 設備マスタ参照機能
# ------------------------------------------------------------#
  MastermainteEquipmentGetFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "設備マスタ参照機能"
      FunctionName: "mastermainte_equipment_get"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mastermainte_equipment_get.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MastermainteEquipmentGetVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MastermainteEquipmentGetFunction
  MastermainteEquipmentGetAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MastermainteEquipmentGetFunction
          FunctionVersion: !GetAtt  MastermainteEquipmentGetVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# 設備マスタ更新機能
# ------------------------------------------------------------#
  MastermainteEquipmentUpsertFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "設備マスタ更新機能"
      FunctionName: "mastermainte_equipment_upsert"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mastermainte_equipment_upsert.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MastermainteEquipmentUpsertVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MastermainteEquipmentUpsertFunction
  MastermainteEquipmentUpsertAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MastermainteEquipmentUpsertFunction
          FunctionVersion: !GetAtt  MastermainteEquipmentUpsertVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# 設備マスタ削除機能
# ------------------------------------------------------------#
  MastermainteEquipmentDeleteFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "設備マスタ削除機能"
      FunctionName: "mastermainte_equipment_delete"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mastermainte_equipment_delete.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MastermainteEquipmentDeleteVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MastermainteEquipmentDeleteFunction
  MastermainteEquipmentDeleteAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MastermainteEquipmentDeleteFunction
          FunctionVersion: !GetAtt  MastermainteEquipmentDeleteVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# 収集区分マスタ参照機能
# ------------------------------------------------------------#
  MastermainteCollectiontypeGetFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: 収集区分マスタ参照機能
      FunctionName: "mastermainte_collectiontype_get"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mastermainte_collectiontype_get.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MastermainteCollectiontypeGetVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MastermainteCollectiontypeGetFunction
  MastermainteCollectiontypeGetAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MastermainteCollectiontypeGetFunction
          FunctionVersion: !GetAtt  MastermainteCollectiontypeGetVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# monone処理一連機能
# ------------------------------------------------------------#
  MononeCoreFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "monone処理一連機能"
      FunctionName: "mononeCore"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/mononeCore.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  MononeCoreVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref MononeCoreFunction
  MononeCoreAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref MononeCoreFunction
          FunctionVersion: !GetAtt  MononeCoreVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# S3バックアップ機能
# ------------------------------------------------------------#
  S3backupscoreFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "S3バックアップ機能"
      FunctionName: "S3backupscore"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/S3backupscore.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  S3backupscoreVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref S3backupscoreFunction
  S3backupscoreAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref S3backupscoreFunction
          FunctionVersion: !GetAtt  S3backupscoreVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# 音ファイル作成機能
# ------------------------------------------------------------#
  SoundCreatorFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "音ファイル作成機能"
      FunctionName: "sound_Creator"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/sound_Creator.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  SoundCreatorVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref SoundCreatorFunction
  SoundCreatorAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref SoundCreatorFunction
          FunctionVersion: !GetAtt  SoundCreatorVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# 音ファイルダウンロード機能
# ------------------------------------------------------------#
  SoundDownloadFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "音ファイルダウンロード機能"
      FunctionName: "soundDownload"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/soundDownload.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  SoundDownloadVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref SoundDownloadFunction
  SoundDownloadAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref SoundDownloadFunction
          FunctionVersion: !GetAtt SoundDownloadVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# 音ファイル一覧参照機能
# ------------------------------------------------------------#
  SoundFileHistoryGetFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: "音ファイル一覧参照機能"
      FunctionName: "soundFileHistory_get"
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - IAMRoleForLambda
        - Arn
      Code:
        S3Bucket : !Sub "${S3BucketName}"
        S3Key : "resouces/soundFileHistory_get.zip"
      Timeout: 30
      MemorySize: 128
      Runtime: python3.8
      VpcConfig: 
        SubnetIds: 
          - !Sub "${subnetIda}"
          - !Sub "${subnetIdc}"
        SecurityGroupIds: 
          - !Ref LambdaSecurityGroup
      Layers:
        - !Ref LambdaLayer
  SoundFileHistoryGetVersion:
      Type: "AWS::Lambda::Version"
      Properties:
          Description: "製品化ver1.0"
          FunctionName: !Ref SoundFileHistoryGetFunction
  SoundFileHistoryGetAlias:
      Type: "AWS::Lambda::Alias"
      Properties:
          Description: ""
          FunctionName: !Ref SoundFileHistoryGetFunction
          FunctionVersion: !GetAtt  SoundFileHistoryGetVersion.Version
          Name: "PRD"
# ------------------------------------------------------------#
# レイヤー
# ------------------------------------------------------------#
  LambdaLayer:
      Type: "AWS::Lambda::LayerVersion"
      Properties:
          Description: "製品化ver1.0"
          CompatibleRuntimes: 
            - "python3.6"
            - "python3.7"
            - "python3.8"
          LayerName: "initRdsCommon"
          Content: 
              S3Bucket: !Sub "${S3BucketName}"
              S3Key: "resouces/python.zip"

# ------------------------------------------------------------#
# lambdaRole create
# ------------------------------------------------------------# 
  IAMRoleForLambda:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonRDSFullAccess'
        - 'arn:aws:iam::aws:policy/AWSLambda_FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonAthenaFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSESFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonVPCFullAccess'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'
      MaxSessionDuration: 3600
      Path: "/"
      RoleName: "lambdaRole"
# ------------------------------------------------------------#
#  SecurityGroup for lambda
#  ※アウトバウンドルール全て許可
# ------------------------------------------------------------#
  LambdaSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId:  !Sub "${vpcId}"
      GroupName: !Sub "lambda-sg"
      GroupDescription: "-"
      Tags:
        - Key: "Name"
          Value: !Sub "lambda-sg"
      SecurityGroupEgress: 
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"

  LambdaSecurityGroupIngress:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      GroupId : !GetAtt LambdaSecurityGroup.GroupId
      IpProtocol : tcp
      FromPort :  3306
      ToPort : 3306
      SourceSecurityGroupId : !GetAtt LambdaSecurityGroup.GroupId