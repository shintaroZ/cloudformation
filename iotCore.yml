AWSTemplateFormatVersion: "2010-09-09"
Description: "iot core create"

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "IotCore Configuration"
        Parameters:
          - clientNamePrefix
          - DgwDeviceId
          - DxpDeviceId
          - ModelId
      - Label:
          default: "S3 Configuration"
        Parameters:
          - s3BucketName
# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------# 
Parameters:
  clientNamePrefix:
    Type: String
    Default: "budonoki"
    Description : "input clientName"
    
  DgwDeviceId:
    Type: String
    Default: "*"
    Description : "input DgwDeviceId. default is *"
    
  DxpDeviceId:
    Type: String
    Default: "*"
    Description : "input DxpDeviceId. default is *"
    
  ModelId:
    Type: String
    Default: "*"
    Description : "input ModelId. default is *"
    
  s3BucketName:
    Type: String
    Default: "eg-iot-budonoki"
    Description : "input s3 bucketName"
    
Resources:
# ------------------------------------------------------------#
# IoTPolicy create DGW二台目以降は手動でResourceを追加
# ------------------------------------------------------------# 
  IoTPolicy:
      Type: "AWS::IoT::Policy"
      Properties:
          PolicyName: !Sub "${clientNamePrefix}-Dgw-Policy"
          PolicyDocument: 
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "iot:Publish",
                      "iot:Receive"
                    ],
                    "Resource": [
                      "Fn::Sub" : "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/${clientNamePrefix}/mqtt/latest"
                    ]
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "iot:Subscribe"
                    ],
                    "Resource": [
                      "Fn::Sub" : "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/${clientNamePrefix}/mqtt/latest"
                    ]
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "iot:Connect"
                    ],
                    "Resource": [
                      "Fn::Sub" : "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:client/${DgwDeviceId}"
                    ]
                  }
                ]
              }


# ------------------------------------------------------------#
# IoTRule create
# ------------------------------------------------------------# 
  DgwTopicRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName : !Sub "${clientNamePrefix}_Dgw_Latest"
      TopicRulePayload:
        AwsIotSqlVersion : "2016-03-23"
        RuleDisabled: false
        Sql: !Sub "SELECT '${s3BucketName}' as clientName , * as receivedMessages FROM '${clientNamePrefix}/mqtt/latest'"
        Actions:
          - Lambda:
              FunctionArn : !ImportValue DgwCoreFunctionArn
          - S3:
              BucketName: !Sub "${s3BucketName}"
              RoleArn: !GetAtt IAMRoleForIotCore.Arn
              Key: "bkstrage/mqtt/${parse_time(\"yyyyMMdd\", timestamp(), \"Asia/Tokyo\" )}/${requestTimeStamp}_${DgwDeviceId}.json"

  OpcTopicRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName : !Sub "${clientNamePrefix}_Opc_Latest"
      TopicRulePayload:
        AwsIotSqlVersion : "2016-03-23"
        RuleDisabled: false
        Sql: !Sub "SELECT '${s3BucketName}' as clientName , [ * ] as receivedMessages, parse_time('yyyy-MM-dd HH:mm:ss', timestamp(), 'Asia/Tokyo') as requestTimeStamp FROM '$aws/sitewise/asset-models/${ModelId}/assets/${DxpDeviceId}/properties/+'"
        Actions:
          - Lambda:
              FunctionArn : !ImportValue OpcuaCoreFunctionArn
          - S3:
              BucketName: !Sub "${s3BucketName}"
              RoleArn: !GetAtt IAMRoleForIotCore.Arn
              Key: "bkstrage/opc-ua/${parse_time(\"yyyyMMdd\", timestamp(), \"Asia/Tokyo\" )}/${parse_time(\"yyyy-MM-dd HH:mm:ss.SSS\", timestamp(), \"Asia/Tokyo\" )}_${get(payload, \"assetId\")}_${get(payload, \"propertyId\")}.json"

# ------------------------------------------------------------#
# IotCore Role create
# ------------------------------------------------------------#
  IAMRoleForIotCore:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "iot.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess'
        - 'arn:aws:iam::aws:policy/AWSLambda_FullAccess'
      MaxSessionDuration: 3600
      Path: "/"
      RoleName: !Sub "${clientNamePrefix}-iotCoreRole"
# ------------------------------------------------------------#
# Output Parameters
# ------------------------------------------------------------#
Outputs:
  iotCoreRuleName:
    Value: !Ref DgwTopicRule
    Export:
      Name: "iotCoreRuleName"
  iotCoreTopicName:
    Value: !Sub "${clientNamePrefix}/mqtt/latest"
    Export:
      Name: "iotCoreTopicName"